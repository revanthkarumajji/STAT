{"title":"Research question 3","markdown":{"yaml":{"title":"Research question 3"},"headingText":"Load necessary libraries","containsRefs":false,"markdown":"\n\n**Question :** How does the presence of multiple mineral soil group (Multiple MSG Flag) affect corn and hay yield across different counties, and can these indicators be used to predict yield variations effectively using regression and decision tree models.\n\nThe presence of multiple mineral soil groups (Multiple MSG Flag) positively affects both corn and hay yields. Data analysis shows that fields with diverse soil groups tend to yield higher compared to fields without such diversity. Specifically, regression analysis revealed significant increases in yield for areas with multiple soil groups: corn yields decrease by about 2.817 tons per acre and hay yields by about 0.440 tons per acre in the absence of soil diversity.\n\nHowever, the capability of regression and decision tree models (Random Forest) to predict these yield variations effectively is limited. Both models demonstrated low R-squared values, indicating they capture a small fraction of the variability in yields. For corn, the R-squared was around 0.015, and for hay, about 0.009. These results suggest that while there is a clear trend linking soil diversity to higher yields, other unmodeled factors also play significant roles in yield variability. Therefore, these indicators alone may not be sufficient to predict yield variations effectively without incorporating additional data and refining the modeling approaches.\n\n**Methodology**\n- **Data Preparation**: The analysis involved preparing the dataset by ensuring correct factor levels\nfor the \\`Multiple MSG Flag\\` and scaling yield data for model compatibility.\n- **Modeling Approach**:\n- **Regression Analysis**: To quantify the direct impact of soil diversity on yields.\n- **Random Forest Analysis**: To assess the capability of decision tree models in predicting yields\nbased on soil diversit\n\n```{r, echo=FALSE}\n\nlibrary(readr)  # For reading CSV files\nlibrary(dplyr)  # For data manipulation\nlibrary(ggplot2)  # For creating visualizations\n\n# dataset\ndata = read_csv(\"C:/Users/Vijay/Downloads/NYSERDA_2023_Soils_Data_for_use_in_the_Large-Scale_Renewables_and_NY-Sun_Programs.csv\")\n# Check all column names in the dataset\ncolnames(data)\n```\n\n```{r}\n# Ensure 'Multiple MSG Flag' includes 'No' as a factor level correctly\ndata$`Multiple MSG Flag` <- factor(data$`Multiple MSG Flag`, levels = c(\"Yes\", \"No\"))\n\n# Now safely replace NA values with \"No\"\ndata$`Multiple MSG Flag`[is.na(data$`Multiple MSG Flag`)] <- \"No\"\n\n# Verify changes to ensure \"No\" is now included and NAs are handled\ntable(data$`Multiple MSG Flag`)\n\n\n```\n\n```{r}\nlibrary(plotly)\n\n# Create ggplot for Corn Yield\np_corn <- ggplot(data, aes(x = `Multiple MSG Flag`, y = `Corn Yield (ton/acre)`)) +\n  geom_boxplot(fill = \"blue\") +\n  labs(title = \"Corn Yield by Multiple MSG Flag\", x = \"Multiple MSG Flag\", y = \"Corn Yield\")\n\n# Convert to plotly\nplotly_corn <- ggplotly(p_corn)\n\n# Display the plots\nplotly_corn\n\n\n\n```\n\n```{r}\n# Create ggplot for Hay Yield\np_hay <- ggplot(data, aes(x = `Multiple MSG Flag`, y = `Hay Yield (ton/acre)`)) +\n  geom_boxplot(fill = \"green\") +\n  labs(title = \"Hay Yield by Multiple MSG Flag\", x = \"Multiple MSG Flag\", y = \"Hay Yield\")\n\nplotly_hay <- ggplotly(p_hay)\nplotly_hay\n```\n\n**Visual Analysis** - **Box Plots**: Displayed differences in yield distributions between fields with and without multiple mineral soil groups. Fields with multiple groups showed higher median yields and greater variability, suggesting a positive impact of soil diversity on yields.\n\n```{r}\n# Linear regression for Corn Yield\nlm_corn <- lm(`Corn Yield (ton/acre)` ~ `Multiple MSG Flag`, data = data)\nsummary(lm_corn)\n\n\n```\n\n**Regression Analysis**\n- **Corn Yield**:\n- The regression model indicated a significant decrease in yield (by approximately 2.8169 tons per\nacre) for fields without multiple soil groups, confirming that diverse soil conditions contribute\npositively to corn yield.\n- Model statistics: The low R-squared value (0.015) implies that while the model captures the trend,\nother factors also significantly influence yield variations.\n\n```{r}\n\n# Linear regression for Hay Yield\nlm_hay <- lm(`Hay Yield (ton/acre)` ~ `Multiple MSG Flag`, data = data)\nsummary(lm_hay)\n```\n\n\\- **Hay Yield**:\n- Similar trends were observed for hay, with a decrease of 0.43985 tons per acre in fields lacking\nsoil diversity.\n- The model's explanatory power was also limited (R-squared = 0.009), suggesting the influence of\nadditional unmodelled factors.\n\n```{r}\n# Load necessary libraries\nlibrary(caret)       # for data preparation and model evaluation\nlibrary(randomForest) # for random forest modeling\nlibrary(e1071)       # for SVM\n\n# Prepare data (assuming 'data' is already loaded and cleaned)\n# Ensure factor levels are correctly assigned\ndata$`Multiple MSG Flag` <- factor(data$`Multiple MSG Flag`, levels = c(\"No\", \"Yes\"))\n\n# Split data into training and testing sets\nset.seed(123)  # for reproducibility\ntraining_indices <- createDataPartition(data$`Corn Yield (ton/acre)`, p = 0.8, list = TRUE)\ntrain_data <- data[training_indices[[1]], ]\ntest_data <- data[-training_indices[[1]], ]\n\n# Scale data for SVM\npreproc <- preProcess(train_data[, c(\"Corn Yield (ton/acre)\", \"Hay Yield (ton/acre)\")], method = c(\"center\", \"scale\"))\ntrain_scaled <- predict(preproc, train_data)\ntest_scaled <- predict(preproc, test_data)\n\n```\n\n**Random Forest Analysis**\n- **Predictive Performance**:\n- Predictions for corn yields were consistently around 9.777948 tons per acre across samples,\nindicating a possible underfitting where the model could not capture the full variability in the data.\n- Hay yield predictions were also constant (around 1.868529 tons per acre), further illustrating the\nmodel's limitations in dealing with the dataset's complexities.\n\n```{r}\n# Check for missing values in the relevant columns of test_data\nsum(is.na(test_data$`Corn Yield (ton/acre)`))\nsum(is.na(test_data$`Multiple MSG Flag`))\n\n# If there are missing values, decide on a strategy:\ntest_data <- test_data[!is.na(test_data$`Corn Yield (ton/acre)`) & !is.na(test_data$`Multiple MSG Flag`), ]\n\nmedian_corn_yield <- median(train_data$`Corn Yield (ton/acre)`, na.rm = TRUE)\ntest_data$`Corn Yield (ton/acre)`[is.na(test_data$`Corn Yield (ton/acre)`)] <- median_corn_yield\n\n```\n\n```{r}\n# Include Hay Yield in the cleaned test data\nclean_test_data <- test_data[, c(\"Multiple MSG Flag\", \"Corn Yield (ton/acre)\", \"Hay Yield (ton/acre)\")]\n\n\nrf_model_corn <- randomForest(y = train_data$`Corn Yield (ton/acre)`, x = train_data[, \"Multiple MSG Flag\", drop = FALSE], ntree = 500)\n# Predict using the Random Forest model on the updated clean test data\nrf_predictions <- predict(rf_model_corn, newdata = clean_test_data)\n\n# Display the first few predictions to verify\nhead(rf_predictions)\n\n```\n\n```{r}\n# Evaluate the predictions using appropriate metrics (if your model output is designed to compare directly against Corn Yield)\nrf_results <- postResample(rf_predictions, clean_test_data$`Corn Yield (ton/acre)`)\nprint(rf_results)\n\n```\n\n```{r}\n# Assuming rf_results contains RMSE, R-squared, and MAE\nmetrics_data <- data.frame(\n  Metric = c(\"RMSE\", \"R-squared\", \"MAE\"),\n  Value = c(rf_results[\"RMSE\"], rf_results[\"Rsquared\"], rf_results[\"MAE\"])\n)\n\n# Print the data frame to check\nprint(metrics_data)\n\n```\n\n```{r}\nlibrary(plotly)\n\n# Create a bar chart\nplot <- plot_ly(data = metrics_data, x = ~Metric, y = ~Value, type = 'bar', \n                marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5)))\nplot <- layout(plot, title = \"Model Performance Metrics\",\n                yaxis = list(title = \"Value\"),\n                xaxis = list(title = \"Metric\"))\n\n# Render the plot\nplot\n\n```\n\n```{r}\n# Gauge chart for R-squared\ngauge_plot <- plot_ly(\n  domain = list(x = c(0, 1), y = c(0, 1)),\n  value = rf_results[\"Rsquared\"],\n  title = list(text = \"R-squared\"),\n  type = \"indicator\",\n  mode = \"gauge+number\",\n  gauge = list(\n    axis = list(range = c(0, 1)),\n    bar = list(color = \"darkblue\"),\n    steps = list(\n      list(range = c(0, 0.5), color = \"red\"),\n      list(range = c(0.5, 0.75), color = \"yellow\"),\n      list(range = c(0.75, 1), color = \"green\")\n    )\n  )\n)\n\n# Render the gauge chart\ngauge_plot\n\n```\n\n```{r}\n# Train the Random Forest model for Hay Yield\nrf_model_hay <- randomForest(y = train_data$`Hay Yield (ton/acre)`, x = train_data[, \"Multiple MSG Flag\", drop = FALSE], ntree = 500)\n\n# Check the model summary to see the details\nprint(summary(rf_model_hay))\n\n```\n\n```{r}\n# Predict Hay Yield using the Random Forest model\nhay_predictions <- predict(rf_model_hay, newdata = clean_test_data)\n\n# Display the first few predictions to verify\nhead(hay_predictions)\n\n```\n\n```{r}\n# Evaluate the model performance for Hay Yield predictions\nhay_results <- postResample(hay_predictions, clean_test_data$`Hay Yield (ton/acre)`)\n\n# Print the results to see the performance metrics\nprint(hay_results)\n\n```\n\n```{r}\n# Assuming rf_results contains RMSE, R-squared, and MAE\nmetrics_datas <- data.frame(\n  Metric = c(\"RMSE\", \"R-squared\", \"MAE\"),\n  Value = c(hay_results[\"RMSE\"], hay_results[\"Rsquared\"], hay_results[\"MAE\"])\n)\n\n# Print the data frame to check\nprint(metrics_data)\n```\n\n```{r}\nlibrary(plotly)\n\n# Create a bar chart\nplot <- plot_ly(data = metrics_datas, x = ~Metric, y = ~Value, type = 'bar', \n                marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5)))\nplot <- layout(plot, title = \"Model Performance Metrics\",\n                yaxis = list(title = \"Value\"),\n                xaxis = list(title = \"Metric\"))\n\n# Render the plot\nplot\n```\n\n```{r}\n# Gauge chart for R-squared\ngauge_plot <- plot_ly(\n  domain = list(x = c(0, 1), y = c(0, 1)),\n  value = hay_results[\"Rsquared\"],\n  title = list(text = \"R-squared\"),\n  type = \"indicator\",\n  mode = \"gauge+number\",\n  gauge = list(\n    axis = list(range = c(0, 1)),\n    bar = list(color = \"darkblue\"),\n    steps = list(\n      list(range = c(0, 0.5), color = \"red\"),\n      list(range = c(0.5, 0.75), color = \"yellow\"),\n      list(range = c(0.75, 1), color = \"green\")\n    )\n  )\n)\n\n# Render the gauge chart\ngauge_plot\n```\n\n**Discussion**\n\n\\- **Interpretation of Results**: The findings from both regression and random forest models consistently show that soil diversity positively affects agricultural yields. However, the limited variance explained by these models underscores the complexity of yield determination, which likely involves factors beyond soil diversity alone.\n\n\\- **Model Limitations**: The low R-squared values in both models indicate that future models should include more variables, such as climatic conditions, farming practices, and other soil parameters, to improve prediction accuracy.\n\n**Conclusion**\n\n\\- **Implications for Agricultural Practices**: The study confirms the beneficial impact of soil diversity on yields, suggesting that policies and practices that enhance soil biodiversity could lead to increased agricultural productivity.\n\n\\- **Recommendations for Further Research**: It is recommended to extend this analysis by incorporating more diverse datasets and exploring more sophisticated machine learning models that can handle the dataset's complexity better.\n","srcMarkdownNoYaml":"\n\n**Question :** How does the presence of multiple mineral soil group (Multiple MSG Flag) affect corn and hay yield across different counties, and can these indicators be used to predict yield variations effectively using regression and decision tree models.\n\nThe presence of multiple mineral soil groups (Multiple MSG Flag) positively affects both corn and hay yields. Data analysis shows that fields with diverse soil groups tend to yield higher compared to fields without such diversity. Specifically, regression analysis revealed significant increases in yield for areas with multiple soil groups: corn yields decrease by about 2.817 tons per acre and hay yields by about 0.440 tons per acre in the absence of soil diversity.\n\nHowever, the capability of regression and decision tree models (Random Forest) to predict these yield variations effectively is limited. Both models demonstrated low R-squared values, indicating they capture a small fraction of the variability in yields. For corn, the R-squared was around 0.015, and for hay, about 0.009. These results suggest that while there is a clear trend linking soil diversity to higher yields, other unmodeled factors also play significant roles in yield variability. Therefore, these indicators alone may not be sufficient to predict yield variations effectively without incorporating additional data and refining the modeling approaches.\n\n**Methodology**\n- **Data Preparation**: The analysis involved preparing the dataset by ensuring correct factor levels\nfor the \\`Multiple MSG Flag\\` and scaling yield data for model compatibility.\n- **Modeling Approach**:\n- **Regression Analysis**: To quantify the direct impact of soil diversity on yields.\n- **Random Forest Analysis**: To assess the capability of decision tree models in predicting yields\nbased on soil diversit\n\n```{r, echo=FALSE}\n\n# Load necessary libraries\nlibrary(readr)  # For reading CSV files\nlibrary(dplyr)  # For data manipulation\nlibrary(ggplot2)  # For creating visualizations\n\n# dataset\ndata = read_csv(\"C:/Users/Vijay/Downloads/NYSERDA_2023_Soils_Data_for_use_in_the_Large-Scale_Renewables_and_NY-Sun_Programs.csv\")\n# Check all column names in the dataset\ncolnames(data)\n```\n\n```{r}\n# Ensure 'Multiple MSG Flag' includes 'No' as a factor level correctly\ndata$`Multiple MSG Flag` <- factor(data$`Multiple MSG Flag`, levels = c(\"Yes\", \"No\"))\n\n# Now safely replace NA values with \"No\"\ndata$`Multiple MSG Flag`[is.na(data$`Multiple MSG Flag`)] <- \"No\"\n\n# Verify changes to ensure \"No\" is now included and NAs are handled\ntable(data$`Multiple MSG Flag`)\n\n\n```\n\n```{r}\nlibrary(plotly)\n\n# Create ggplot for Corn Yield\np_corn <- ggplot(data, aes(x = `Multiple MSG Flag`, y = `Corn Yield (ton/acre)`)) +\n  geom_boxplot(fill = \"blue\") +\n  labs(title = \"Corn Yield by Multiple MSG Flag\", x = \"Multiple MSG Flag\", y = \"Corn Yield\")\n\n# Convert to plotly\nplotly_corn <- ggplotly(p_corn)\n\n# Display the plots\nplotly_corn\n\n\n\n```\n\n```{r}\n# Create ggplot for Hay Yield\np_hay <- ggplot(data, aes(x = `Multiple MSG Flag`, y = `Hay Yield (ton/acre)`)) +\n  geom_boxplot(fill = \"green\") +\n  labs(title = \"Hay Yield by Multiple MSG Flag\", x = \"Multiple MSG Flag\", y = \"Hay Yield\")\n\nplotly_hay <- ggplotly(p_hay)\nplotly_hay\n```\n\n**Visual Analysis** - **Box Plots**: Displayed differences in yield distributions between fields with and without multiple mineral soil groups. Fields with multiple groups showed higher median yields and greater variability, suggesting a positive impact of soil diversity on yields.\n\n```{r}\n# Linear regression for Corn Yield\nlm_corn <- lm(`Corn Yield (ton/acre)` ~ `Multiple MSG Flag`, data = data)\nsummary(lm_corn)\n\n\n```\n\n**Regression Analysis**\n- **Corn Yield**:\n- The regression model indicated a significant decrease in yield (by approximately 2.8169 tons per\nacre) for fields without multiple soil groups, confirming that diverse soil conditions contribute\npositively to corn yield.\n- Model statistics: The low R-squared value (0.015) implies that while the model captures the trend,\nother factors also significantly influence yield variations.\n\n```{r}\n\n# Linear regression for Hay Yield\nlm_hay <- lm(`Hay Yield (ton/acre)` ~ `Multiple MSG Flag`, data = data)\nsummary(lm_hay)\n```\n\n\\- **Hay Yield**:\n- Similar trends were observed for hay, with a decrease of 0.43985 tons per acre in fields lacking\nsoil diversity.\n- The model's explanatory power was also limited (R-squared = 0.009), suggesting the influence of\nadditional unmodelled factors.\n\n```{r}\n# Load necessary libraries\nlibrary(caret)       # for data preparation and model evaluation\nlibrary(randomForest) # for random forest modeling\nlibrary(e1071)       # for SVM\n\n# Prepare data (assuming 'data' is already loaded and cleaned)\n# Ensure factor levels are correctly assigned\ndata$`Multiple MSG Flag` <- factor(data$`Multiple MSG Flag`, levels = c(\"No\", \"Yes\"))\n\n# Split data into training and testing sets\nset.seed(123)  # for reproducibility\ntraining_indices <- createDataPartition(data$`Corn Yield (ton/acre)`, p = 0.8, list = TRUE)\ntrain_data <- data[training_indices[[1]], ]\ntest_data <- data[-training_indices[[1]], ]\n\n# Scale data for SVM\npreproc <- preProcess(train_data[, c(\"Corn Yield (ton/acre)\", \"Hay Yield (ton/acre)\")], method = c(\"center\", \"scale\"))\ntrain_scaled <- predict(preproc, train_data)\ntest_scaled <- predict(preproc, test_data)\n\n```\n\n**Random Forest Analysis**\n- **Predictive Performance**:\n- Predictions for corn yields were consistently around 9.777948 tons per acre across samples,\nindicating a possible underfitting where the model could not capture the full variability in the data.\n- Hay yield predictions were also constant (around 1.868529 tons per acre), further illustrating the\nmodel's limitations in dealing with the dataset's complexities.\n\n```{r}\n# Check for missing values in the relevant columns of test_data\nsum(is.na(test_data$`Corn Yield (ton/acre)`))\nsum(is.na(test_data$`Multiple MSG Flag`))\n\n# If there are missing values, decide on a strategy:\ntest_data <- test_data[!is.na(test_data$`Corn Yield (ton/acre)`) & !is.na(test_data$`Multiple MSG Flag`), ]\n\nmedian_corn_yield <- median(train_data$`Corn Yield (ton/acre)`, na.rm = TRUE)\ntest_data$`Corn Yield (ton/acre)`[is.na(test_data$`Corn Yield (ton/acre)`)] <- median_corn_yield\n\n```\n\n```{r}\n# Include Hay Yield in the cleaned test data\nclean_test_data <- test_data[, c(\"Multiple MSG Flag\", \"Corn Yield (ton/acre)\", \"Hay Yield (ton/acre)\")]\n\n\nrf_model_corn <- randomForest(y = train_data$`Corn Yield (ton/acre)`, x = train_data[, \"Multiple MSG Flag\", drop = FALSE], ntree = 500)\n# Predict using the Random Forest model on the updated clean test data\nrf_predictions <- predict(rf_model_corn, newdata = clean_test_data)\n\n# Display the first few predictions to verify\nhead(rf_predictions)\n\n```\n\n```{r}\n# Evaluate the predictions using appropriate metrics (if your model output is designed to compare directly against Corn Yield)\nrf_results <- postResample(rf_predictions, clean_test_data$`Corn Yield (ton/acre)`)\nprint(rf_results)\n\n```\n\n```{r}\n# Assuming rf_results contains RMSE, R-squared, and MAE\nmetrics_data <- data.frame(\n  Metric = c(\"RMSE\", \"R-squared\", \"MAE\"),\n  Value = c(rf_results[\"RMSE\"], rf_results[\"Rsquared\"], rf_results[\"MAE\"])\n)\n\n# Print the data frame to check\nprint(metrics_data)\n\n```\n\n```{r}\nlibrary(plotly)\n\n# Create a bar chart\nplot <- plot_ly(data = metrics_data, x = ~Metric, y = ~Value, type = 'bar', \n                marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5)))\nplot <- layout(plot, title = \"Model Performance Metrics\",\n                yaxis = list(title = \"Value\"),\n                xaxis = list(title = \"Metric\"))\n\n# Render the plot\nplot\n\n```\n\n```{r}\n# Gauge chart for R-squared\ngauge_plot <- plot_ly(\n  domain = list(x = c(0, 1), y = c(0, 1)),\n  value = rf_results[\"Rsquared\"],\n  title = list(text = \"R-squared\"),\n  type = \"indicator\",\n  mode = \"gauge+number\",\n  gauge = list(\n    axis = list(range = c(0, 1)),\n    bar = list(color = \"darkblue\"),\n    steps = list(\n      list(range = c(0, 0.5), color = \"red\"),\n      list(range = c(0.5, 0.75), color = \"yellow\"),\n      list(range = c(0.75, 1), color = \"green\")\n    )\n  )\n)\n\n# Render the gauge chart\ngauge_plot\n\n```\n\n```{r}\n# Train the Random Forest model for Hay Yield\nrf_model_hay <- randomForest(y = train_data$`Hay Yield (ton/acre)`, x = train_data[, \"Multiple MSG Flag\", drop = FALSE], ntree = 500)\n\n# Check the model summary to see the details\nprint(summary(rf_model_hay))\n\n```\n\n```{r}\n# Predict Hay Yield using the Random Forest model\nhay_predictions <- predict(rf_model_hay, newdata = clean_test_data)\n\n# Display the first few predictions to verify\nhead(hay_predictions)\n\n```\n\n```{r}\n# Evaluate the model performance for Hay Yield predictions\nhay_results <- postResample(hay_predictions, clean_test_data$`Hay Yield (ton/acre)`)\n\n# Print the results to see the performance metrics\nprint(hay_results)\n\n```\n\n```{r}\n# Assuming rf_results contains RMSE, R-squared, and MAE\nmetrics_datas <- data.frame(\n  Metric = c(\"RMSE\", \"R-squared\", \"MAE\"),\n  Value = c(hay_results[\"RMSE\"], hay_results[\"Rsquared\"], hay_results[\"MAE\"])\n)\n\n# Print the data frame to check\nprint(metrics_data)\n```\n\n```{r}\nlibrary(plotly)\n\n# Create a bar chart\nplot <- plot_ly(data = metrics_datas, x = ~Metric, y = ~Value, type = 'bar', \n                marker = list(color = 'rgb(158,202,225)', line = list(color = 'rgb(8,48,107)', width = 1.5)))\nplot <- layout(plot, title = \"Model Performance Metrics\",\n                yaxis = list(title = \"Value\"),\n                xaxis = list(title = \"Metric\"))\n\n# Render the plot\nplot\n```\n\n```{r}\n# Gauge chart for R-squared\ngauge_plot <- plot_ly(\n  domain = list(x = c(0, 1), y = c(0, 1)),\n  value = hay_results[\"Rsquared\"],\n  title = list(text = \"R-squared\"),\n  type = \"indicator\",\n  mode = \"gauge+number\",\n  gauge = list(\n    axis = list(range = c(0, 1)),\n    bar = list(color = \"darkblue\"),\n    steps = list(\n      list(range = c(0, 0.5), color = \"red\"),\n      list(range = c(0.5, 0.75), color = \"yellow\"),\n      list(range = c(0.75, 1), color = \"green\")\n    )\n  )\n)\n\n# Render the gauge chart\ngauge_plot\n```\n\n**Discussion**\n\n\\- **Interpretation of Results**: The findings from both regression and random forest models consistently show that soil diversity positively affects agricultural yields. However, the limited variance explained by these models underscores the complexity of yield determination, which likely involves factors beyond soil diversity alone.\n\n\\- **Model Limitations**: The low R-squared values in both models indicate that future models should include more variables, such as climatic conditions, farming practices, and other soil parameters, to improve prediction accuracy.\n\n**Conclusion**\n\n\\- **Implications for Agricultural Practices**: The study confirms the beneficial impact of soil diversity on yields, suggesting that policies and practices that enhance soil biodiversity could lead to increased agricultural productivity.\n\n\\- **Recommendations for Further Research**: It is recommended to extend this analysis by incorporating more diverse datasets and exploring more sophisticated machine learning models that can handle the dataset's complexity better.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"research3.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":"sketchy","title":"Research question 3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}